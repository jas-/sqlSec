#!/bin/bash 
# Installation script for sqlSec
# Jason Gerfen <jason.gerfen@gmail.com>

e="echo -en"
ver="v0.1"
txt_green='\e[1;32m'
txt_reset='\e[0m'

${e} "${txt_green}sqlSec${txt_reset}\n"
echo "Automate encryption key rotation for database"
echo "encrypted fields to meet password lifetime"
echo "security policies"
echo ""

function ask {
 while true; do
  if [ "${2:-}" = "Y" ]; then
   prompt="Y/n"
   default=Y
  elif [ "${2:-}" = "N" ]; then
   prompt="y/N"
   default=N
  else
   prompt="y/n"
   default=
  fi

  read -p "$1 [$prompt] " REPLY

  if [ -z "$REPLY" ]; then
   REPLY=$default
  fi
  case "$REPLY" in
   Y*|y*) return 0 ;;
   N*|n*) return 1 ;;
  esac
 done
}

echo "Creating necessary database creation objects..."
if [ -d ".install" ] ;
then
  touch .install/database-schema.sql
else
  mkdir .install
fi
cp -fr templates/*.sql .install/
echo ""

${e} "${txt_green}Database installation credentials${txt_reset}\n"
echo ""

read -p "Enter MySQL username: " mu;
read -sp "Enter root MySQL password: " pass;
echo ""
echo ""

${e} "${txt_green}Database settings${txt_reset}\n"
echo ""

read -p "Database server name [localhost]: " server
sed -i "s/{SERVER}/${server:=localhost}/g" .install/*.sql

PS3="Select database to use: "
db=$(mysql -u ${mu} --password=${pass} ${name} -sss -e "show databases" | awk '{ if($1!="mysql"&&$1!="information_schema"){print $1} }')
select name in ${db}; do
 if [ "${name}" != "mysql" ] && [ "${name}" != "information_schema" ]; then
  if [ -n "${name}" ]; then
   sed -i "s/{NAME}/${name}/g" .install/*.sql
   echo ""
   break
  fi
 fi
done

read -p "Backup directory [/tmp]: " buf
sed -i "s={BUF}=${buf:=/tmp}=   g" .install/*.sql
echo ""

sp_user="$(tr -cd '[:alnum:]' < /dev/urandom | fold -w15 | head -n1)";
sed -i "s/{SP}/${sp_user}/g" .install/*.sql
sp_pass="$(tr -cd '[:alnum:]' < /dev/urandom | fold -w25 | head -n1)";
sed -i "s/{SP_PW}/${sp_pass}/g" .install/*.sql
key="$(tr -cd '[:alnum:]' < /dev/urandom | fold -w68 | head -n1)";
sed -i "s/{KEY}/${key}/g" .install/*.sql
sed -i "s/{VER}/${ver}/g" .install/*.sql

if ask "Create a backup? " Y; then
 d=$(date +"%Y-%m-%d")
 mysqldump -u ${mu} --password=${pass} --routines ${name} > ${buf}/${d}-${name}.sql
 echo "Backup created... ${buf}/${d}-${name}.sql"
fi
echo ""

echo "Creating database, users & permissions"
mysql -u ${mu} --password=${pass} < .install/sqlSec-schema.sql

echo "Creating key rotaton procedures"
mysql -u ${mu} --password=${pass} ${name} < .install/sqlSec-procs.sql
echo ""

${e} "${txt_green}Specify encrypted fields for database: ${name}${txt_reset}\n"
echo ""

t(){
 table="${1}"
 PS3="Select field to enable encryption: "
 fields=$(mysql -u ${mu} --password=${pass} ${name} -sss -e "describe ${table}" | awk '{ print $1 }')
 fields+=" Main"
 fields+=" Quit"
 select field in ${fields}; do
  if [ "${field}" == "Quit" ]; then
   break
  fi
  if [ "${field}" == "Main" ]; then
   m
   break
  fi
  if [ -n "${field}" ]; then
   mysql -u ${mu} --password=${pass} ${name} -sss -e 'INSERT INTO `sqlSec_map` (`tbl`, `field`) VALUES ("'${table}'", "'${field}'")'
   t ${table}
  fi
 done
}

m(){
 PS3="Select table to view fields: "
 tables=$(mysql -u ${mu} --password=${pass} ${name} -sss -e "show tables" | awk '{ print $1 }')
 tables+=" Quit"
 select table in ${tables}; do
  if [ "${table}" == "Quit" ]; then
   break
  fi
  if [ -n "${table}" ]; then
   t ${table}
  fi
  break
 done
}

m

echo "Cleaning up..."
rm -fr .install/
